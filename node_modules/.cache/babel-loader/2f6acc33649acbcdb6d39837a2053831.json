{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/Button/index.tsx\";\nimport React from \"react\";\nimport \"./Button.scss\";\nimport { cellState, cellValue } from \"../../types\";\n\nconst Button = ({\n  row,\n  col,\n  state,\n  value\n}) => {\n  const renderButton = () => {\n    if (state == cellState.visible) {\n      if (value == cellValue.bomb) {}\n    } else if (state == cellState.flagged) {} else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `button ${state == cellState.visible ? 'visible' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/Button/index.tsx"],"names":["React","cellState","cellValue","Button","row","col","state","value","renderButton","visible","bomb","flagged"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;;AASA,MAAMC,MAA6B,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,GAAN;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAChE,QAAMC,YAAY,GAAG,MAAuB;AACxC,QAAGF,KAAK,IAAIL,SAAS,CAACQ,OAAtB,EAA8B;AAC1B,UAAGF,KAAK,IAAIL,SAAS,CAACQ,IAAtB,EAA2B,CAE1B;AAEJ,KALD,MAKM,IAAGJ,KAAK,IAAIL,SAAS,CAACU,OAAtB,EAA8B,CAEnC,CAFK,MAED;AACD,aAAO,IAAP;AACH;AAEJ,GAZD;;AAaA,sBACA;AAAK,IAAA,SAAS,EAAG,UAASL,KAAK,IAAIL,SAAS,CAACQ,OAAnB,GAA6B,SAA7B,GAAyC,EAAG,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAKH,CAnBD;;AAqBA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Button.scss\"\nimport { cellState, cellValue } from \"../../types\";\n\ninterface ButtonProps{\n    row: number;\n    col: number;\n    state: cellState;\n    value: cellValue;\n}\n\nconst Button: React.FC<ButtonProps> = ({row, col, state, value}) => {\n    const renderButton = (): React.ReactNode => {\n        if(state == cellState.visible){\n            if(value == cellValue.bomb){\n\n            }\n            \n        }else if(state == cellState.flagged){\n\n        }else{\n            return null;\n        }\n\n    };\n    return (\n    <div className={`button ${state == cellState.visible ? 'visible' : \"\"}`}>\n\n    </div>\n    );\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}