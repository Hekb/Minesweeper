{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/App/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport \"./App.scss\";\nimport Number from \"../Number\";\nimport { generateCells } from \"../../utils\";\nimport Button from '../Button';\nimport { face, cellState } from \"../../types\";\n\nconst App = () => {\n  const [cells, setCells] = useState(generateCells());\n  const [Face, setFace] = useState(face.won);\n  const [time, setTime] = useState(0);\n  const [gameStarted, setLive] = useState(false);\n  useEffect(() => {\n    const mosuedown = () => {\n      setFace(face.lost);\n    };\n\n    const mouseup = () => {\n      setFace(face.won);\n    };\n\n    window.addEventListener('mousedown', mosuedown);\n    window.addEventListener('mouseup', mouseup);\n    return () => {\n      window.removeEventListener('mousedown', mosuedown);\n      window.removeEventListener('mouseup', mosuedown);\n    };\n  }, []);\n  useEffect(() => {\n    if (gameStarted) {\n      const timer = setInterval(() => {\n        setTime(time + 1);\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [gameStarted, time]);\n\n  const handleCellClick = (row1, col1) => () => {\n    if (!gameStarted) {\n      setLive(true);\n    }\n  };\n\n  const faceClicked = () => {\n    if (gameStarted) {\n      setLive(false);\n      setTime(0);\n      setCells(generateCells());\n    }\n  };\n\n  const handleRightClick = (row1, col1) => e => {\n    e.preventDefault();\n    const cell = cells[row1][col1];\n    const currentCells = cells.slice();\n\n    if (cell.state === cellState.visible) {\n      return;\n    } else if (cell.state === cellState.open) {\n      currentCells[row1][col1].state = cellState.flagged;\n      setCells(currentCells);\n    }\n  };\n\n  const renderCells = () => {\n    return cells.map((i, rowIndex) => i.map((cell, colIndex) => /*#__PURE__*/React.createElement(Button, {\n      key: `${rowIndex}-${colIndex}`,\n      row: rowIndex,\n      col: colIndex,\n      state: cell.state,\n      value: cell.value,\n      onClick: handleCellClick,\n      rightClicked: handleRightClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Minesweeper\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Built By Hekmat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Number, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"face\",\n    onClick: faceClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-label\": \"face\",\n    role: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, Face)), /*#__PURE__*/React.createElement(Number, {\n    value: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, renderCells()));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/App/index.tsx"],"names":["React","useState","useEffect","Number","generateCells","Button","face","cellState","App","cells","setCells","Face","setFace","won","time","setTime","gameStarted","setLive","mosuedown","lost","mouseup","window","addEventListener","removeEventListener","timer","setInterval","clearInterval","handleCellClick","row1","col1","faceClicked","handleRightClick","e","preventDefault","cell","currentCells","slice","state","visible","open","flagged","renderCells","map","i","rowIndex","colIndex","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, MouseEvent} from 'react';\nimport \"./App.scss\";\nimport Number from \"../Number\";\nimport {generateCells} from \"../../utils\";\nimport Button from '../Button';\nimport {cell, face, cellState} from \"../../types\";\n\nconst App: React.FC = () =>{\n    const[cells, setCells] = useState<cell[][]>(generateCells());\n    const[Face, setFace] = useState<face>(face.won);\n    const[time, setTime] = useState<number>(0);\n    const[gameStarted, setLive] = useState<boolean>(false);\n\n    useEffect(() =>{\n        const mosuedown = () =>{\n            setFace(face.lost);\n        }\n        const mouseup = () => {\n            setFace(face.won)\n        }\n        window.addEventListener('mousedown', mosuedown)\n        window.addEventListener('mouseup', mouseup)\n        return () => {\n            window.removeEventListener('mousedown', mosuedown)\n            window.removeEventListener('mouseup', mosuedown)\n        }\n    }, [])\n    useEffect(() => {\n        if(gameStarted){\n            const timer = setInterval(() =>{\n                setTime(time + 1);\n            }, 1000)\n            return () => {\n                clearInterval(timer);\n            }    \n        }\n    },[gameStarted, time ]);\n\n    const handleCellClick = (row1: number, col1: number) => (): void => {\n        if(!gameStarted){\n            setLive(true);\n        }\n\n    } \n    const faceClicked = () => {\n        if(gameStarted){\n            setLive(false)\n            setTime(0)\n            setCells(generateCells())\n        }\n    }\n    const handleRightClick = (row1: number, col1: number) => (e: React.MouseEvent<HTMLDivElement, MouseEvent>): void =>{\n        e.preventDefault();\n        const cell = cells[row1][col1]\n        const currentCells = cells.slice();\n\n        if(cell.state === cellState.visible){\n            return;\n        }else if(cell.state === cellState.open){\n            currentCells[row1][col1].state = cellState.flagged\n            setCells(currentCells)\n        }\n    }\n    const renderCells = ():React.ReactNode => {\n        return cells.map((i, rowIndex) => i.map((cell, colIndex) => \n        <Button key={`${rowIndex}-${colIndex}`} \n            row={rowIndex} \n            col={colIndex} \n            state={cell.state} \n            value={cell.value}\n            onClick={handleCellClick}\n            rightClicked={handleRightClick}\n            />)\n        );\n    };\n    return(\n        <div className=\"App\">\n            <div className=\"preHeader\">\n                <p>Minesweeper</p>\n                <p>Built By Hekmat</p>\n            </div>\n            <div className=\"header\">\n                <Number value={0}>\n                    \n                </Number>\n                <div className=\"face\" onClick={faceClicked}> \n                    <span aria-label=\"face\" role=\"img\">{Face}</span> \n                </div>\n                <Number value={time}>\n\n                </Number>\n            </div>\n            <div className=\"body\">\n                {renderCells()}\n            </div>\n\n\n        </div>\n        \n    )\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}