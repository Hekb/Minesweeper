{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/Button/index.tsx\";\nimport React from \"react\";\nimport \"./Button.scss\";\nimport { cellState, cellValue } from \"../../types\";\n\nconst Button = ({\n  row,\n  col,\n  state,\n  value,\n  onClick,\n  rightClicked\n}) => {\n  const renderButton = () => {\n    if (state == cellState.visible) {\n      if (value == cellValue.bomb) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          \"aria-label\": \"bomb\",\n          role: \"img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }\n        }, \" \\uD83D\\uDCA3\");\n      }\n\n      if (value == cellValue.empty) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-label\": \"number\",\n        role: \"img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \" \", value);\n    } else if (state == cellState.flagged) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-label\": \"flag\",\n        role: \"img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, \" \\uD83D\\uDEA9\");\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `button ${state == cellState.visible ? 'visible' : \"\"} value-${value}`,\n    onClick: onClick(row, col),\n    onContextMenu: rightClicked(row, col),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, renderButton());\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/Matt/Desktop/Minesweeper/minesweeper/src/components/Button/index.tsx"],"names":["React","cellState","cellValue","Button","row","col","state","value","onClick","rightClicked","renderButton","visible","bomb","empty","flagged"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;;AAWA,MAAMC,MAA6B,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,GAAN;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA;AAAlC,CAAD,KAAsD;AACxF,QAAMC,YAAY,GAAG,MAAuB;AACxC,QAAGJ,KAAK,IAAIL,SAAS,CAACU,OAAtB,EAA8B;AAC1B,UAAGJ,KAAK,IAAIL,SAAS,CAACU,IAAtB,EAA2B;AACvB,4BAAQ;AAAM,wBAAW,MAAjB;AAAwB,UAAA,IAAI,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAR;AACH;;AACD,UAAGL,KAAK,IAAIL,SAAS,CAACW,KAAtB,EAA4B;AACxB,eAAO,IAAP;AACH;;AACD,0BAAQ;AAAM,sBAAW,QAAjB;AAA0B,QAAA,IAAI,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuCN,KAAvC,CAAR;AACH,KARD,MAQM,IAAGD,KAAK,IAAIL,SAAS,CAACa,OAAtB,EAA8B;AAChC,0BAAQ;AAAM,sBAAW,MAAjB;AAAwB,QAAA,IAAI,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAR;AACH,KAFK,MAED;AACD,aAAO,IAAP;AACH;AAEJ,GAfD;;AAgBA,sBACA;AAAK,IAAA,SAAS,EAAG,UAASR,KAAK,IAAIL,SAAS,CAACU,OAAnB,GAA6B,SAA7B,GAAyC,EAAG,UAASJ,KAAM,EAArF;AACI,IAAA,OAAO,EAAEC,OAAO,CAACJ,GAAD,EAAKC,GAAL,CADpB;AAEI,IAAA,aAAa,EAAGI,YAAY,CAACL,GAAD,EAAKC,GAAL,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKK,YAAY,EAHjB,CADA;AAOH,CAxBD;;AA0BA,eAAeP,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Button.scss\"\nimport { cellState, cellValue } from \"../../types\";\n\ninterface ButtonProps{\n    row: number;\n    col: number;\n    state: cellState;\n    value: cellValue;\n    onClick(rowP: number, colP: number): (e:React.MouseEvent) => void;\n    rightClicked(row: number, col: number): (e:React.MouseEvent) => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({row, col, state, value, onClick, rightClicked }) => {\n    const renderButton = (): React.ReactNode => {\n        if(state == cellState.visible){\n            if(value == cellValue.bomb){\n                return (<span aria-label=\"bomb\" role=\"img\"> ðŸ’£</span>);\n            }\n            if(value == cellValue.empty){\n                return null;\n            }\n            return (<span aria-label=\"number\" role=\"img\"> {value}</span>)\n        }else if(state == cellState.flagged){\n            return (<span aria-label=\"flag\" role=\"img\"> ðŸš©</span>);\n        }else{\n            return null;\n        }\n\n    };\n    return (\n    <div className={`button ${state == cellState.visible ? 'visible' : \"\"} value-${value}`} \n        onClick={onClick(row,col)}\n        onContextMenu={ rightClicked(row,col) }>\n        {renderButton()}\n    </div>\n    );\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}